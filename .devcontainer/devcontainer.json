{
  "name": "LangChain Python Development",
  "build": {
    "dockerfile": "Dockerfile",
    "context": "."
  },
  "onCreateCommand": "[ ! -f .env ] && cp .env.example .env && echo '⚠️ Created .env from .env.example.  You can add keys here or they can be read from host environment.'; pip install -r requirements.txt",
  "postCreateCommand": "mkdir -p tests notebooks data && pip install -e . && echo '✅ LangChain development environment ready!'",
  "features": {
    "ghcr.io/devcontainers/features/github-cli:1": {}
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.pylint",
        "ms-python.black-formatter",
        "ms-python.isort",
        "ms-toolsai.jupyter",
        "charliermarsh.ruff",
        "ms-python.mypy-type-checker",
        "ms-vscode.test-adapter-converter",
        "littlefoxteam.vscode-python-test-adapter",
        "redhat.vscode-yaml",
        "ms-vscode.vscode-json"
      ],
      "settings": {
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.pythonPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.formatting.provider": "black",
        "python.linting.mypyEnabled": true,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": "always"
        },
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "python.testing.pytestArgs": [
          "tests"
        ],
        "jupyter.askForKernelRestart": false
      }
    }
  },
  "forwardPorts": [
    8000,
    8080,
    8888
  ],
  "containerEnv": {
    "OPENAI_API_KEY": "${localEnv:OPENAI_API_KEY}",
    "ANTHROPIC_API_KEY": "${localEnv:ANTHROPIC_API_KEY}",
    "GOOGLE_API_KEY": "${localEnv:GOOGLE_API_KEY}",
    "LANGCHAIN_API_KEY": "${localEnv:LANGCHAIN_API_KEY}",
    "LANGCHAIN_TRACING_V2": "${localEnv:LANGCHAIN_TRACING_V2}",
    "LANGCHAIN_PROJECT": "${localEnv:LANGCHAIN_PROJECT}",
    "PINECONE_API_KEY": "${localEnv:PINECONE_API_KEY}",
    "PINECONE_ENVIRONMENT": "${localEnv:PINECONE_ENVIRONMENT}",
    "SERPAPI_API_KEY": "${localEnv:SERPAPI_API_KEY}",
    "HUGGINGFACE_API_TOKEN": "${localEnv:HUGGINGFACE_API_TOKEN}",
    "REDIS_URL": "${localEnv:REDIS_URL}"
  },
  "remoteUser": "vscode"
}